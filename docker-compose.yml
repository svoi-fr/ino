version: '3.8'

services:
  # Milvus services
  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    networks:
      - ino-net
    restart: unless-stopped

  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/minio:/minio_data
    command: minio server /minio_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - ino-net
    restart: unless-stopped

  milvus:
    container_name: milvus
    image: milvusdb/milvus:v2.4.12
    command: ["milvus", "run", "standalone"]
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/milvus:/var/lib/milvus
    ports:
      - "0.0.0.0:19530:19530"
      - "0.0.0.0:9091:9091"
    depends_on:
      - "etcd"
      - "minio"
    networks:
      - ino-net
    restart: unless-stopped

  # Milvus web UI
  attu:
    container_name: attu
    image: zilliz/attu:v2.4.8
    environment:
      MILVUS_URL: milvus:19530
    ports:
      - "0.0.0.0:8000:3000"
    depends_on:
      - milvus
    networks:
      - ino-net
    restart: unless-stopped

  # MongoDB services
  mongodb:
    container_name: mongodb
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/mongodb/data:/data/db
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/mongodb/config:/data/configdb
    ports:
      - "0.0.0.0:27017:27017"
    networks:
      - ino-net
    restart: unless-stopped

  mongo-express:
    container_name: mongo-express
    image: mongo-express:latest
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_BASICAUTH_USERNAME: inoadmin
      ME_CONFIG_BASICAUTH_PASSWORD: InoExpressAccess2025
    ports:
      - "0.0.0.0:8081:8081"
    depends_on:
      - mongodb
    networks:
      - ino-net
    restart: unless-stopped

networks:
  ino-net:
    name: ino-network
    driver: bridge